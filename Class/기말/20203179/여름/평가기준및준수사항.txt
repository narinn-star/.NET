프로그램내용 :  Console 기반의 채팅 서버/클라이언트 구현

주의사항 - 반드시 예제와 동일하게 console 기반으로 작성한다.

참고 : 

Server :
- 클라이언트 접속을 받아들이고, 클라이언트가 보내온 문자를 현재 접속되어 있는 모든 클라이언트에게 전달한다
- 종료한 클라이언트 소켓은 삭제한다. 
- 클라이언트 관리 : ArrayTest project참고

Client :
- 서버에 접속하여 연결 소켓을 생성한다. (Tcpclient 객체 생성)
- 사용자가 입력한 문자열을 접속되어 있는 서버에 전송한다(Tcpclient 객체 이용).
- 별도의 수신전용 Thread를 생성하여 동일한 Tcpclient 객체로 문자열을 수신한다. 

---------------------------------------------------------------------------------------------
 평가 : 

- 제시한 예제의 기능을 정확하게 동일하게 구현함			---- B

- 클라이언트 포트넘버 대신 최초 클라이언트 연결시 
  닉네임을 입력받아 클라이언트 이름으로 활용	 		---- B+


- 접속 클라이언트 소켓관리에 Thread 동기화 기술을 활용함
                  (소스 확인하여 평가함)			---- A


- 2시간 30분 완성                                               ---- A+ 


준수사항 :

Project 이름 : 학번  ( 예: 97222124S, 97222124C ) <--- 지키지 않을 경우 점수 없음 
- 실행파일은 default로 학번.exe 가 될것임( 예: 97222124.exe )
- 윈도우 caption은 본인 학번과이름

* 화장실은 두 명 이상씩 동시에 다녀오지 못함
* 현장에서 평가. (USB Memory 등의 개인의 저장장치가 보일 때는 부정행위로 간주)
* 평가 후에는 내어주는 USB Memory에 결과물을 저장할 것 
  - 단, 반드시, 제발, Please !!!  "obj와 bin folder를 지운다. 
    그리고 반드시, 제발, Please !!! "본인학번-본인이름.zip" 으로 압축하여 제출한다.
    예: 97222124-정반장.zip (○)          






